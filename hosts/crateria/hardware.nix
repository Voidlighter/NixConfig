# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
#
# /dev/nvme0n1p1: UUID="E2A2-1510" BLOCK_SIZE="512" TYPE="vfat" PARTLABEL="EFI" PARTUUID="b1050ed2-bdd5-4e8c-805d-8b976e8699f8"
# /dev/nvme0n1p2: UUID="0a8e9d87-249d-410f-a68d-e39af0b27766" TYPE="crypto_LUKS" PARTLABEL="root" PARTUUID="61ff9afa-968f-41f9-8055-24da2fce8092"
# /dev/nvme0n1p3: UUID="8c97656f-aedd-4294-9865-6795e9795109" TYPE="crypto_LUKS" PARTUUID="1d1870df-b52b-41f3-95bb-bda15963d328"
# /dev/mapper/luks-0a8e9d87-249d-410f-a68d-e39af0b27766: UUID="a3405df1-e296-4b49-9ead-1163c2743bc3" BLOCK_SIZE="4096" TYPE="ext4"
# /dev/mapper/nvme0n1p3_crypt: LABEL="swap" UUID="2b0f742c-2eaa-4a5a-ae9a-af5d4017abeb" TYPE="swap"
{ config, lib, pkgs, modulesPath, ... }: {
  imports = [
    (modulesPath + "/hardware/network/broadcom-43xx.nix")
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/a3405df1-e296-4b49-9ead-1163c2743bc3";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-0a8e9d87-249d-410f-a68d-e39af0b27766".device =
    "/dev/disk/by-uuid/0a8e9d87-249d-410f-a68d-e39af0b27766";
  boot.initrd.luks.devices."luks-8c97656f-aedd-4294-9865-6795e9795109".device =
    "/dev/disk/by-uuid/8c97656f-aedd-4294-9865-6795e9795109";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/E2A2-1510";
    fsType = "vfat";
    options = [ "fmask=0077" "dmask=0077" ];
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/2b0f742c-2eaa-4a5a-ae9a-af5d4017abeb"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp58s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
